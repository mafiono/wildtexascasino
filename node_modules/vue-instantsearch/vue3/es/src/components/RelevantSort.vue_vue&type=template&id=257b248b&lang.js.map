{"version":3,"file":"RelevantSort.vue_vue&type=template&id=257b248b&lang.js","sources":["../../../../src/components/RelevantSort.vue?vue&type=template&id=257b248b&lang.js"],"sourcesContent":["<template>\n  <div\n    v-if=\"state && state.isVirtualReplica\"\n    :class=\"suit()\"\n  >\n    <slot\n      :is-relevant-sorted=\"state.isRelevantSorted\"\n      :refine=\"state.refine\"\n    >\n      <div :class=\"suit('text')\">\n        <slot\n          name=\"text\"\n          :is-relevant-sorted=\"state.isRelevantSorted\"\n        />\n      </div>\n      <button\n        type=\"button\"\n        :class=\"suit('button')\"\n        @click=\"refine()\"\n      >\n        <slot\n          name=\"button\"\n          :is-relevant-sorted=\"state.isRelevantSorted\"\n        >{{ state.isRelevantSorted ? 'See all results' : 'See relevant results' }}</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectRelevantSort } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisRelevantSort',\n  mixins: [\n    createSuitMixin({ name: 'RelevantSort' }),\n    createWidgetMixin(\n      {\n        connector: connectRelevantSort,\n      },\n      {\n        $$widgetType: 'ais.relevantSort',\n      }\n    ),\n  ],\n  methods: {\n    refine() {\n      if (this.state.isRelevantSorted) {\n        this.state.refine(0);\n      } else {\n        this.state.refine(undefined);\n      }\n    },\n  },\n};\n</script>\n"],"names":["_ctx","isVirtualReplica","_createBlock","class","_renderSlot","isRelevantSorted","refine","_createVNode","type","onClick","$options"],"mappings":"mLAEUA,SAASA,QAAMC,sBADvBC,eAEGC,MAAOH,WAERI,sBACGC,iBAAoBL,QAAMK,iBAC1BC,OAAQN,QAAMM,0BAEfC,SAAMJ,MAAOH,iBACXI,mBAEGC,iBAAoBL,QAAMK,uBAG/BE,YACEC,KAAK,SACJL,MAAOH,iBACPS,uCAAOC,eAERN,qBAEGC,iBAAoBL,QAAMK,wCACzBL,QAAMK"}