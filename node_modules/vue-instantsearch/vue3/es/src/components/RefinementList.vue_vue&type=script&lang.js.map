{"version":3,"file":"RefinementList.vue_vue&type=script&lang.js","sources":["../../../../src/components/RefinementList.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[\n      suit(),\n      !state.canRefine && suit('','noRefinement')\n    ]\"\n    v-if=\"state\"\n  >\n    <slot\n      :items=\"items\"\n      :refine=\"refine\"\n      :search-for-items=\"state.searchForItems\"\n      :search-for-items-query=\"searchForFacetValuesQuery\"\n      :toggle-show-more=\"toggleShowMore\"\n      :can-toggle-show-more=\"state.canToggleShowMore\"\n      :is-showing-more=\"state.isShowingMore\"\n      :createURL=\"state.createURL\"\n      :is-from-search=\"state.isFromSearch\"\n      :can-refine=\"state.canRefine\"\n      :send-event=\"state.sendEvent\"\n    >\n      <div\n        :class=\"suit('searchBox')\"\n        v-if=\"searchable\"\n      >\n        <search-input\n          v-model=\"searchForFacetValues\"\n          :placeholder=\"searchablePlaceholder\"\n          :class-names=\"classNames\"\n        />\n      </div>\n      <slot\n        name=\"noResults\"\n        :query=\"searchForFacetValues\"\n        v-if=\"state.isFromSearch && items.length === 0\"\n      >\n        <div :class=\"suit('noResults')\">No results.</div>\n      </slot>\n      <ul :class=\"suit('list')\">\n        <li\n          :class=\"[\n          suit('item'), item.isRefined && suit('item', 'selected')]\"\n          v-for=\"item in items\"\n          :key=\"item.value\"\n        >\n          <slot\n            name=\"item\"\n            :item=\"item\"\n            :refine=\"refine\"\n            :createURL=\"state.createURL\"\n          >\n            <label :class=\"suit('label')\">\n              <input\n                :class=\"suit('checkbox')\"\n                type=\"checkbox\"\n                :value=\"item.value\"\n                :checked=\"item.isRefined\"\n                @change=\"refine(item.value)\"\n              >\n              <span\n                v-if=\"searchable\"\n                :class=\"suit('labelText')\"\n              >\n                <ais-highlight\n                  attribute=\"item\"\n                  :hit=\"item\"\n                />\n              </span>\n              <span\n                v-else\n                :class=\"suit('labelText')\"\n              >{{ item.label }}</span>\n              <span :class=\"suit('count')\">{{ item.count }}</span>\n            </label>\n          </slot>\n        </li>\n      </ul>\n      <button\n        :class=\"[\n          suit('showMore'),\n          {\n            [suit('showMore', 'disabled')]: !state.canToggleShowMore,\n          }\n        ]\"\n        @click=\"toggleShowMore\"\n        v-if=\"showMore\"\n        :disabled=\"!state.canToggleShowMore\"\n      >\n        <slot\n          name=\"showMoreLabel\"\n          :is-showing-more=\"state.isShowingMore\"\n        >Show {{ state.isShowingMore ? 'less' : 'more' }}</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\nimport { connectRefinementList } from 'instantsearch.js/es/connectors';\nimport SearchInput from './SearchInput.vue';\nimport AisHighlight from './Highlight.vue';\n\nconst noop = () => {};\n\nexport default {\n  name: 'AisRefinementList',\n  components: { SearchInput, AisHighlight },\n  mixins: [\n    createSuitMixin({ name: 'RefinementList' }),\n    createWidgetMixin(\n      {\n        connector: connectRefinementList,\n      },\n      {\n        $$widgetType: 'ais.refinementList',\n      }\n    ),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => Boolean(state.canRefine),\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    searchable: {\n      type: Boolean,\n      default: undefined,\n    },\n    searchablePlaceholder: {\n      type: String,\n      required: false,\n      default: 'Search hereâ€¦',\n    },\n    operator: {\n      default: 'or',\n      validator(value) {\n        return value === 'and' || value === 'or';\n      },\n      required: false,\n    },\n    limit: {\n      type: Number,\n      required: false,\n      default: undefined,\n    },\n    showMoreLimit: {\n      type: Number,\n      required: false,\n      default: undefined,\n    },\n    showMore: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n    sortBy: {\n      type: [Array, Function],\n      required: false,\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      required: false,\n      default: undefined,\n    },\n  },\n  data() {\n    return {\n      searchForFacetValuesQuery: '',\n    };\n  },\n  computed: {\n    searchForFacetValues: {\n      get() {\n        return this.searchForFacetValuesQuery;\n      },\n      set(value) {\n        this.state.searchForItems(value);\n        this.searchForFacetValuesQuery = value;\n      },\n    },\n    toggleShowMore() {\n      return this.state.toggleShowMore || noop;\n    },\n    items() {\n      return this.state.items.map(item =>\n        Object.assign({}, item, {\n          _highlightResult: {\n            item: {\n              value: item.highlighted,\n            },\n          },\n        })\n      );\n    },\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        operator: this.operator,\n        limit: this.limit,\n        showMore: this.showMore,\n        showMoreLimit: this.showMoreLimit,\n        sortBy: this.sortBy,\n        escapeFacetValues: true,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    refine(value) {\n      this.state.refine(value);\n      this.searchForFacetValuesQuery = '';\n    },\n  },\n};\n</script>\n"],"names":["const","noop","name","components","SearchInput","AisHighlight","mixins","createSuitMixin","createWidgetMixin","connector","connectRefinementList","$$widgetType","createPanelConsumerMixin","mapStateToCanRefine","state","Boolean","canRefine","props","attribute","type","String","required","searchable","default","undefined","searchablePlaceholder","operator","validator","value","limit","Number","showMoreLimit","showMore","sortBy","Array","Function","transformItems","data","searchForFacetValuesQuery","computed","searchForFacetValues","get","this","set","searchForItems","toggleShowMore","items","map","item","Object","assign","_highlightResult","highlighted","widgetParams","escapeFacetValues","methods","refine"],"mappings":"gUAyGAA,IAAMC,6BAES,CACbC,KAAM,oBACNC,WAAY,aAAEC,eAAaC,GAC3BC,OAAQ,CACNC,EAAgB,CAAEL,KAAM,mBACxBM,EACE,CACEC,UAAWC,GAEb,CACEC,aAAc,uBAGlBC,EAAyB,CACvBC,6BAAqBC,UAASC,QAAQD,EAAME,eAGhDC,MAAO,CACLC,UAAW,CACTC,KAAMC,OACNC,UAAU,GAEZC,WAAY,CACVH,KAAMJ,QACNQ,aAASC,GAEXC,sBAAuB,CACrBN,KAAMC,OACNC,UAAU,EACVE,QAAS,gBAEXG,SAAU,CACRH,QAAS,KACTI,mBAAUC,SACS,QAAVA,GAA6B,OAAVA,GAE5BP,UAAU,GAEZQ,MAAO,CACLV,KAAMW,OACNT,UAAU,EACVE,aAASC,GAEXO,cAAe,CACbZ,KAAMW,OACNT,UAAU,EACVE,aAASC,GAEXQ,SAAU,CACRb,KAAMJ,QACNM,UAAU,EACVE,SAAS,GAEXU,OAAQ,CACNd,KAAM,CAACe,MAAOC,UACdd,UAAU,EACVE,aAASC,GAEXY,eAAgB,CACdjB,KAAMgB,SACNd,UAAU,EACVE,aAASC,IAGba,sBACS,CACLC,0BAA2B,KAG/BC,SAAU,CACRC,qBAAsB,CACpBC,sBACSC,KAAKJ,2BAEdK,aAAIf,QACGd,MAAM8B,eAAehB,QACrBU,0BAA4BV,IAGrCiB,iCACSH,KAAK5B,MAAM+B,gBAAkB5C,GAEtC6C,wBACSJ,KAAK5B,MAAMgC,MAAMC,aAAIC,UAC1BC,OAAOC,OAAO,GAAIF,EAAM,CACtBG,iBAAkB,CAChBH,KAAM,CACJpB,MAAOoB,EAAKI,mBAMtBC,8BACS,CACLnC,UAAWwB,KAAKxB,UAChBQ,SAAUgB,KAAKhB,SACfG,MAAOa,KAAKb,MACZG,SAAUU,KAAKV,SACfD,cAAeW,KAAKX,cACpBE,OAAQS,KAAKT,OACbqB,mBAAmB,EACnBlB,eAAgBM,KAAKN,kBAI3BmB,QAAS,CACPC,gBAAO5B,QACAd,MAAM0C,OAAO5B,QACbU,0BAA4B"}