{"version":3,"file":"index-vue3.js","sources":["../../../../../src/util/vue-compat/index-vue3.js"],"sourcesContent":["import * as Vue from 'vue';\n\nconst isVue2 = false;\nconst isVue3 = true;\nconst Vue2 = undefined;\n\nexport { createApp, createSSRApp, h, version, nextTick } from 'vue';\nexport { Vue, Vue2, isVue2, isVue3 };\n\nexport function renderCompat(fn) {\n  function h(tag, props, children) {\n    if (typeof props === 'object' && (props.attrs || props.props)) {\n      // In vue 3, we no longer wrap with `attrs` or `props` key.\n      const flatProps = Object.assign({}, props, props.attrs, props.props);\n      delete flatProps.attrs;\n      delete flatProps.props;\n\n      return Vue.h(tag, flatProps, children);\n    }\n\n    return Vue.h(tag, props, children);\n  }\n\n  return function() {\n    return fn.call(this, h);\n  };\n}\n\nexport function getDefaultSlot(component) {\n  return component.$slots.default && component.$slots.default();\n}\n"],"names":["isVue2","isVue3","renderCompat","fn","h","tag","props","children","attrs","flatProps","Object","assign","Vue","call","this","getDefaultSlot","component","$slots","default"],"mappings":"8HAEMA,GAAS,EACTC,GAAS,EAMR,SAASC,EAAaC,YAClBC,EAAEC,EAAKC,EAAOC,MACA,iBAAVD,IAAuBA,EAAME,OAASF,EAAMA,OAAQ,KAEvDG,EAAYC,OAAOC,OAAO,GAAIL,EAAOA,EAAME,MAAOF,EAAMA,qBACvDG,EAAUD,aACVC,EAAUH,MAEVM,EAAMP,EAAKI,EAAWF,UAGxBK,EAAMP,EAAKC,EAAOC,UAGpB,kBACEJ,EAAGU,KAAKC,KAAMV,IAIlB,SAASW,EAAeC,UACtBA,EAAUC,OAAOC,SAAWF,EAAUC,OAAOC"}